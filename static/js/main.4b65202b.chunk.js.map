{"version":3,"sources":["github-svgrepo-com.svg","Slider.js","Accordion.js","ChipContainer.js","TabPanel.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","marginLeft","marginRight","display","label","fontSize","input","color","borderBottom","InputSlider","props","classes","React","useState","val","value","setValue","className","Grid","container","spacing","alignItems","item","xs","Slider","slider","onChange","event","newValue","aria-labelledby","min","max","Input","margin","target","Number","onBlur","id","inputProps","step","type","theme","marginBottom","accordion","backgroundColor","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","height","column","flexBasis","justifyContent","helper","borderLeft","divider","padding","link","primary","main","textDecoration","DetailedAccordion","panel","expanded","setExpanded","Accordion","isExpanded","AccordionSummary","aria-controls","style","Typography","Divider","AccordionDetails","details","clsx","background","boxShadow","flexWrap","listStyle","chip","ChipsArray","chipData","length","Paper","component","map","data","Chip","onDelete","handleDelete","key","TabPanel","children","index","other","role","hidden","Box","p","FullWidthTabs","useTheme","AppBar","position","Tabs","indicatorColor","textColor","variant","aria-label","inner","x","i","Tab","axis","direction","onChangeIndex","dir","StyledButton","withStyles","border","textTransform","Button","App","setChipData","statusText","setStatusText","rows","placeholder","startIcon","onClick","textInput","document","getElementById","slider1","parseInt","slider2","slider3","slider4","sliderMin","sliderMax","json","JSON","stringify","ngrams","chars","fetch","method","headers","body","then","response","a","response_json","ok","Promise","reject","result","flat","lengths","msg","n","join","catch","errorJson","console","error","submit","chipToDelete","chips","filter","rel","href","src","github_logo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4b65202b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github-svgrepo-com.b472f676.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Input from '@material-ui/core/Input';\r\nimport VolumeUp from '@material-ui/icons/VolumeUp';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '80%',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    display: 'inline-block',\r\n  },\r\n  label: {\r\n      fontSize: '0.6em',\r\n  },\r\n  input: {\r\n    width: 42,\r\n    color: '#AAA',\r\n    borderBottom: '1px solid #AAA !important'\r\n  },\r\n});\r\n\r\nexport default function InputSlider(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(props.val);\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (value < props.min) {\r\n      setValue(props.min);\r\n    } else if (value > props.max) {\r\n      setValue(props.max);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item className={classes.label}>\r\n          {props.label}\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider\r\n            className={classes.slider}\r\n            value={typeof value === 'number' ? value : 0}\r\n            onChange={handleSliderChange}\r\n            aria-labelledby=\"input-slider\"\r\n            min={props.min}\r\n            max={props.max}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Input\r\n            className={classes.input}\r\n            value={value}\r\n            margin=\"dense\"\r\n            onChange={handleInputChange}\r\n            onBlur={handleBlur}\r\n            id={props.id}\r\n            inputProps={{\r\n              step: 1,\r\n              min: props.min,\r\n              max: props.max,\r\n              type: 'number',\r\n              'aria-labelledby': 'input-slider',\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionActions from '@material-ui/core/AccordionActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Slider from './Slider'\r\nimport './Accordion.css';\r\n\r\n/*\r\nhttps://stackoverflow.com/questions/56045114/flexbox-layout-with-two-columns-on-desktop-and-one-column-on-mobile\r\n*/\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    marginBottom: '16px'\r\n  },\r\n  accordion: {\r\n    backgroundColor: '#1b212c',\r\n    color: '#DDD',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  column: {\r\n    flexBasis: '50%',\r\n    justifyContent: 'center'\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function DetailedAccordion() {\r\n  const classes = useStyles();\r\n  \r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion className={classes.accordion} expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n        <AccordionSummary\r\n          aria-controls=\"panel1c-content\"\r\n          id=\"panel1c-header\"\r\n          style={{backgroundColor: '#373c45'}}\r\n        >\r\n        <Typography className={classes.heading}>OPTIONS</Typography>\r\n        </AccordionSummary>\r\n        <Divider />\r\n        <AccordionDetails id='flexContainer' className={classes.details}>\r\n        <div className={classes.column}>\r\n            <Slider min={0} max={100} val={35} id='slider1' label='1-grams'/>\r\n            <Slider min={0} max={100} val={15} id='slider2' label='2-grams'/>\r\n            <Slider min={0} max={100} val={0} id='slider3' label='3-grams'/>\r\n            <Slider min={0} max={100} val={0} id='slider4' label='4-grams'/>\r\n        </div>\r\n        <div className={clsx(classes.column, classes.helper)}>\r\n            <Slider min={1} max={50} val={4} id='sliderMin' label='Min. chars'/>\r\n            <Slider min={1} max={50} val={30} id='sliderMax' label='Max. chars'/>\r\n        </div>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    id: 'chipContainer',\r\n    width: '100%',\r\n    background: 'none',\r\n    boxShadow: 'none',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    listStyle: 'none',\r\n    padding: theme.spacing(0.5),\r\n    margin: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\n\r\nexport default function ChipsArray(props) {\r\n    \r\n    const classes = useStyles();\r\n  \r\n    // Props: chipData, handleDelete\r\n  \r\n    if (props.chipData.length == 0) {\r\n        return (<Typography style={{color: '#AAA'}}> Results appear here </Typography>);\r\n    }\r\n    else { \r\n        return (\r\n            <Paper component=\"ul\" className={classes.root}>\r\n            {\r\n                props.chipData.map((data) => {\r\n                    let icon;\r\n\r\n                    return (\r\n                        <li key={data.key}>\r\n                            <Chip icon={icon}\r\n                                label={data.label}\r\n                                //onDelete={data.label === 'React' ? undefined : handleDelete(data)}\r\n                                onDelete={props.handleDelete(data)}\r\n                                className={classes.chip}/>\r\n                        </li>\r\n                    );\r\n                })\r\n            }\r\n            </Paper>);\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { AppBar, Tabs, Tab, Box } from '@material-ui/core';\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div role=\"tabpanel\"\r\n             hidden={value !== index}\r\n             id={`full-width-tabpanel-${index}`}\r\n             aria-labelledby={`full-width-tab-${index}`}\r\n             {...other}\r\n        >\r\n        {\r\n            value === index && (\r\n            <Box p={3}>\r\n                {children}\r\n            </Box>)\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: '#1b212c',\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nexport default function FullWidthTabs(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" style={{ background: '#373c45' }}>\r\n                <Tabs\r\n                value={value}\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                variant=\"fullWidth\"\r\n                aria-label=\"full width tabs example\"\r\n                >\r\n                    {props.inner.map((x, i) =>\r\n                        <Tab key={i} label={x.label} {...a11yProps(i)} style={{ color: '#FFF' }}/>\r\n                    )}\r\n                </Tabs>\r\n            </AppBar>\r\n            <SwipeableViews\r\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                index={value}\r\n                onChangeIndex={handleChangeIndex}\r\n                >\r\n                {\r\n                    props.inner.map((x, i) => {{\r\n                        return <TabPanel key={i} value={value} index={i} dir={theme.direction} children={x.component} />\r\n                    }})\r\n                }\r\n            </SwipeableViews>\r\n        </div>\r\n    );\r\n}\r\n","import github_logo from './github-svgrepo-com.svg';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\r\nimport './App.css';\r\n\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\n\r\nimport { Accordion, Card, Form, Col, Row } from \"react-bootstrap\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport DetailedAccordion from './Accordion';\r\nimport ChipContainer from './ChipContainer';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport TabPanel from './TabPanel';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst SEC_COLOR = '#718dbd';\r\nconst SEC_COLOR_DARK = '#5572a5'\r\n\r\n\r\nconst StyledButton = withStyles({\r\n    root: {\r\n        background: SEC_COLOR,\r\n        '&:hover': {\r\n            backgroundColor: SEC_COLOR_DARK,\r\n            color: 'white'\r\n        },\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        margin: '1em'\r\n    },\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n})(Button);\r\n\r\n\r\nconst chipContainer = React.createRef();\r\n\r\nfunction App() {\r\n\r\n    const [chipData, setChipData] = React.useState([]);\r\n    const [statusText, setStatusText] = React.useState(\" \");\r\n      \r\n    const handleDelete = (chipToDelete) => () => {\r\n        setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <header className=\"App-header\">\r\n                <h1 style={{margin: '1em 0 1em 0'}}>\r\n                    Extract <code style={{color: \"#718dbd\"}}>keywords</code> from text documents!\r\n                </h1>\r\n\r\n                <textarea className=\"textarea\"\r\n                          rows=\"10\"\r\n                          margin=\"normal\"\r\n                          id=\"textInput\"\r\n                          label=\"Input text\"\r\n                          placeholder=\"Input text here\"/>\r\n                \r\n                <DetailedAccordion />\r\n\r\n\r\n                <StyledButton id='button_submit' \r\n                              startIcon={<PublishIcon />}\r\n                              onClick={() => submit(setChipData, setStatusText)}>\r\n                    SUBMIT\r\n                </StyledButton>\r\n\r\n                <TabPanel inner={[\r\n                    { \r\n                        label: 'Chips',\r\n                        component: <ChipContainer chipData={chipData} handleDelete={handleDelete}/>\r\n                    },\r\n                    { \r\n                        label: 'List',\r\n                        component: <textarea className=\"textarea\"\r\n                                             rows='10'\r\n                                             value={chipData.map(x => x.label).join('\\n')}\r\n                                             onChange={() => {}}\r\n                                             placeholder=\"Results appear here\" />\r\n                    },\r\n                    { \r\n                        label: 'CSV',\r\n                        component: <textarea className=\"textarea\"\r\n                                             rows='10'\r\n                                             value={chipData.map(x => x.label).join(', ')}\r\n                                             onChange={() => {}}\r\n                                             placeholder=\"Results appear here\" />\r\n                    }\r\n                ]}/>\r\n                \r\n                <Typography id='statusText' variant=\"h6\" style={{color: \"#AAA\"}}>\r\n                    {statusText}\r\n                </Typography>\r\n\r\n                <a className=\"App-link\"\r\n                   target=\"_blank\"\r\n                   rel=\"noopener noreferrer\"\r\n                   href=\"https://github.com/suhren/keyword/\">\r\n                    <img src={github_logo}\r\n                         style={{margin: \"32px\", width:'64px', height: '64px'}} />\r\n                </a>\r\n\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction submit(setChipData, setStatusText) {\r\n    let textInput = document.getElementById('textInput').value;\r\n    let slider1 = parseInt(document.getElementById('slider1').value);\r\n    let slider2 = parseInt(document.getElementById('slider2').value);\r\n    let slider3 = parseInt(document.getElementById('slider3').value);\r\n    let slider4 = parseInt(document.getElementById('slider4').value);\r\n    let sliderMin = parseInt(document.getElementById('sliderMin').value);\r\n    let sliderMax = parseInt(document.getElementById('sliderMax').value);\r\n\r\n    if (textInput == '') {\r\n        return;\r\n    }\r\n\r\n    let json = JSON.stringify({\r\n        text: textInput,\r\n        ngrams: [slider1, slider2, slider3, slider4],\r\n        chars: [sliderMin, sliderMax]  \r\n    });\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json'},\r\n        body: json\r\n    };\r\n\r\n    fetch('https://keyword.bitgnd/generate', requestOptions)\r\n        .then(async response => {\r\n            const response_json = await response.json();\r\n            // Check if status in range 200-299\r\n            if (!response.ok) {\r\n                return Promise.reject(response_json);\r\n            }\r\n            let result = response_json['data']['result'].flat();\r\n            let chipData = result.map((x, i) => ({ key: i, label: x}));\r\n            setChipData(chipData);\r\n\r\n            let lengths = response_json['data']['result'].map(x => x.length);\r\n            let msg = \"Result: \" + lengths.map((n, i) => `[${n}] ${i+1}-grams`).join(', ');\r\n            setStatusText(msg);\r\n        })\r\n        .catch(errorJson => {\r\n            console.error(errorJson);\r\n            setStatusText(errorJson['error']['message']);\r\n        });\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
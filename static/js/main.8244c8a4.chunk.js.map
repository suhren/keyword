{"version":3,"sources":["TabPanel.js","Slider.js","Accordion.js","ChipContainer.js","github-svgrepo-com.svg","App.js","reportWebVitals.js","index.js"],"names":["TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","useStyles","makeStyles","theme","root","backgroundColor","width","FullWidthTabs","classes","useTheme","React","useState","setValue","className","AppBar","position","style","background","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","aria-label","inner","map","x","i","Tab","label","color","axis","direction","onChangeIndex","dir","component","marginLeft","marginRight","display","fontSize","input","borderBottom","InputSlider","val","Grid","container","spacing","alignItems","item","xs","Slider","slider","min","max","Input","margin","target","Number","onBlur","inputProps","step","type","accordion","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","height","column","flexBasis","justifyContent","link","primary","main","textDecoration","DetailedAccordion","panel","expanded","setExpanded","Accordion","isExpanded","AccordionSummary","aria-controls","Typography","Divider","AccordionDetails","details","boxShadow","flexWrap","listStyle","padding","chip","ChipsArray","chipData","length","Paper","data","Chip","onDelete","handleDelete","key","API_ENDPOINT","API_BASE","SEC_COLOR_DARK","MainButton","withStyles","Button","EditButton","App","setChipData","statusText","setStatusText","rows","placeholder","class","flexDirection","startIcon","onClick","copyText","document","getElementById","select","setSelectionRange","execCommand","navigator","clipboard","readText","then","textInput","slider1","parseInt","slider2","slider3","slider4","sliderMin","sliderMax","split","json","JSON","stringify","ngrams","chars","fetch","method","headers","body","response","a","response_json","ok","Promise","reject","results","lengths","flat","msg","n","join","catch","errorJson","console","error","submit","chipToDelete","chips","filter","href","src","github_logo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8244c8a4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { AppBar, Tabs, Tab, Box } from '@material-ui/core';\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div role=\"tabpanel\"\n             hidden={value !== index}\n             id={`full-width-tabpanel-${index}`}\n             aria-labelledby={`full-width-tab-${index}`}\n             {...other}\n        >\n        {\n            value === index && (\n            <Box p={3}>\n                {children}\n            </Box>)\n        }\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: '#1b212c',\n        width: '100%',\n    },\n}));\n\nexport default function FullWidthTabs(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" style={{ background: '#373c45' }}>\n                <Tabs\n                value={value}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"fullWidth\"\n                aria-label=\"full width tabs example\"\n                >\n                    {props.inner.map((x, i) =>\n                        <Tab key={i} label={x.label} {...a11yProps(i)} style={{ color: '#FFF' }}/>\n                    )}\n                </Tabs>\n            </AppBar>\n            <SwipeableViews\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                index={value}\n                onChangeIndex={handleChangeIndex}\n                >\n                {\n                    props.inner.map((x, i) => {{\n                        return <TabPanel key={i} value={value} index={i} dir={theme.direction} children={x.component} />\n                    }})\n                }\n            </SwipeableViews>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Grid, Slider, Input, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '80%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    display: 'inline-block',\n  },\n  label: {\n      fontSize: '0.6em',\n  },\n  input: {\n    width: 42,\n    color: '#AAA',\n    borderBottom: '1px solid #AAA !important'\n  },\n});\n\nexport default function InputSlider(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(props.val);\n\n  const handleSliderChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = (event) => {\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleBlur = () => {\n    if (value < props.min) {\n      setValue(props.min);\n    } else if (value > props.max) {\n      setValue(props.max);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item className={classes.label}>\n          {props.label}\n        </Grid>\n        <Grid item xs>\n          <Slider\n            className={classes.slider}\n            value={typeof value === 'number' ? value : 0}\n            onChange={handleSliderChange}\n            aria-labelledby=\"input-slider\"\n            min={props.min}\n            max={props.max}\n          />\n        </Grid>\n        <Grid item>\n          <Input\n            className={classes.input}\n            value={value}\n            margin=\"dense\"\n            onChange={handleInputChange}\n            onBlur={handleBlur}\n            id={props.id}\n            inputProps={{\n              step: 1,\n              min: props.min,\n              max: props.max,\n              type: 'number',\n              'aria-labelledby': 'input-slider',\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","import React from 'react';\nimport {\n    Accordion, AccordionDetails, AccordionSummary, Typography, Divider,\n    makeStyles\n} from '@material-ui/core';\n\nimport Slider from './Slider'\nimport './Accordion.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    accordion: {\n        backgroundColor: '#1b212c',\n        color: '#DDD',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    icon: {\n        verticalAlign: 'bottom',\n        height: 20,\n        width: 20,\n    },\n    column: {\n        flexBasis: '50%',\n        justifyContent: 'center'\n    },\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: 'none',\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n}));\n\nexport default function DetailedAccordion() {\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Accordion className={classes.accordion} expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n        <AccordionSummary\n          aria-controls=\"panel1c-content\"\n          id=\"panel1c-header\"\n          style={{backgroundColor: '#373c45'}}\n        >\n        <Typography className={classes.heading}>OPTIONS</Typography>\n        </AccordionSummary>\n        <Divider />\n        <AccordionDetails id='flexContainer' className={classes.details}>\n        <div className={classes.column}>\n            <Slider min={0} max={100} val={35} id='slider1' label='1-grams'/>\n            <Slider min={0} max={100} val={15} id='slider2' label='2-grams'/>\n            <Slider min={0} max={100} val={0} id='slider3' label='3-grams'/>\n            <Slider min={0} max={100} val={0} id='slider4' label='4-grams'/>\n        </div>\n        <div className={classes.column}>\n            <Slider min={1} max={50} val={4} id='sliderMin' label='Min. chars'/>\n            <Slider min={1} max={50} val={30} id='sliderMax' label='Max. chars'/>\n        </div>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}","import React from 'react';\nimport { Chip, Paper, Typography, makeStyles } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    id: 'chipContainer',\n    width: '100%',\n    background: 'none',\n    boxShadow: 'none',\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}));\n\n\nexport default function ChipsArray(props) {\n\n    const classes = useStyles();\n\n    // Props: chipData, handleDelete\n\n    if (props.chipData.length == 0) {\n        return (<Typography style={{color: '#AAA'}}> Results appear here </Typography>);\n    }\n    else {\n        return (\n            <Paper component=\"ul\" className={classes.root}>\n            {\n                props.chipData.map((data) => {\n                    let icon;\n\n                    return (\n                        <li key={data.key}>\n                            <Chip icon={icon}\n                                label={data.label}\n                                onDelete={props.handleDelete(data)}\n                                className={classes.chip}/>\n                        </li>\n                    );\n                })\n            }\n            </Paper>);\n    }\n}","export default __webpack_public_path__ + \"static/media/github-svgrepo-com.f3a72930.svg\";","import './App.css';\nimport TabPanel from './TabPanel';\nimport DetailedAccordion from './Accordion';\nimport ChipContainer from './ChipContainer';\nimport github_logo from './github-svgrepo-com.svg';\n\nimport React from 'react';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { Button, Typography, withStyles } from '@material-ui/core';\n\n\nconst API_BASE = 'https://keyword.bitgnd.com/'\nconst API_ENDPOINT = API_BASE + 'generate'\nconst SEC_COLOR = '#718dbd';\nconst SEC_COLOR_DARK = '#5572a5'\n\n\nconst MainButton = withStyles({\n    root: {\n        background: SEC_COLOR,\n        '&:hover': {\n            backgroundColor: SEC_COLOR_DARK,\n        },\n        color: 'white',\n        height: 48,\n        padding: '0 30px',\n        margin: '1em'\n    }\n})(Button);\n\nconst EditButton = withStyles({\n    root: {\n        '&:hover': {\n            backgroundColor: SEC_COLOR_DARK,\n        },\n        color: '#AAA',\n        height: 32,\n        padding: '0 2em',\n        margin: '0px 1em 2em',\n        fontSize: '0.5rem'\n    }\n})(Button);\n\n\nfunction App() {\n\n    const [chipData, setChipData] = React.useState([]);\n    const [statusText, setStatusText] = React.useState(\" \");\n\n    const handleDelete = (chipToDelete) => () => {\n        setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\n    };\n\n    return (\n        <div className=\"App\">\n\n            <header className=\"App-header\">\n                <h1 style={{margin: '1em 0 1em 0', fontSize: '1.2em'}}>\n                    Extract <code style={{color: \"#718dbd\"}}>keywords</code> from text documents!\n                </h1>\n\n                <textarea className=\"textarea\"\n                          rows=\"10\"\n                          margin=\"0\"\n                          id=\"textInput\"\n                          label=\"Input text\"\n                          placeholder=\"Input text here\"/>\n\n                <div class=\"container\" style={{display: 'flex', flexDirection: 'row', alignItems: 'flex-start'}}>\n                    <EditButton startIcon={<FileCopyIcon />}\n                                onClick={() =>  {\n                                    var copyText = document.getElementById('textInput');\n                                    copyText.select();\n                                    copyText.setSelectionRange(0, 99999);\n                                    document.execCommand(\"copy\");\n                                }}>\n                        COPY\n                    </EditButton>\n                    <EditButton startIcon={<AssignmentIcon />}\n                                onClick={() => {\n                                    navigator.clipboard.readText()\n                                    .then((text) => { document.getElementById('textInput').value = text; })\n                                }}>\n                        PASTE\n                    </EditButton>\n                    <EditButton startIcon={<ClearIcon />}\n                                onClick={() =>  document.getElementById('textInput').value = ''}>\n                        CLEAR\n                    </EditButton>\n                </div>\n\n                <DetailedAccordion />\n\n                <MainButton startIcon={<PublishIcon />}\n                            onClick={() => submit(setChipData, setStatusText)}>\n                    SUBMIT\n                </MainButton>\n\n                <TabPanel inner={[\n                    {\n                        label: 'Chips',\n                        component: <ChipContainer chipData={chipData} handleDelete={handleDelete}/>\n                    },\n                    {\n                        label: 'List',\n                        component: <textarea className=\"textarea\"\n                                             rows='10'\n                                             value={chipData.map(x => x.label).join('\\n')}\n                                             onChange={() => {}}\n                                             placeholder=\"Results appear here\" />\n                    },\n                    {\n                        label: 'CSV',\n                        component: <textarea className=\"textarea\"\n                                             rows='10'\n                                             value={chipData.map(x => x.label).join(', ')}\n                                             onChange={() => {}}\n                                             placeholder=\"Results appear here\" />\n                    }\n                ]}/>\n\n                <Typography id='statusText' variant=\"h6\" style={{color: \"#AAA\", margin: '0.5em'}}>\n                    {statusText}\n                </Typography>\n\n                <a className=\"App-link\"\n                   href=\"https://github.com/suhren/keyword/\">\n                    <img src={github_logo}\n                         style={{margin: \"1em\", width:'64px', height: '64px'}} />\n                </a>\n\n            </header>\n        </div>\n    );\n}\n\n\nfunction submit(setChipData, setStatusText) {\n    let textInput = document.getElementById('textInput').value;\n    let slider1 = parseInt(document.getElementById('slider1').value);\n    let slider2 = parseInt(document.getElementById('slider2').value);\n    let slider3 = parseInt(document.getElementById('slider3').value);\n    let slider4 = parseInt(document.getElementById('slider4').value);\n    let sliderMin = parseInt(document.getElementById('sliderMin').value);\n    let sliderMax = parseInt(document.getElementById('sliderMax').value);\n\n    if (textInput.split(\" \").length < 10) {\n        setStatusText('Enter at least 10 words');\n        return;\n    }\n\n    let json = JSON.stringify({\n        text: textInput,\n        ngrams: [slider1, slider2, slider3, slider4],\n        chars: [sliderMin, sliderMax]\n    });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json'},\n        body: json\n    };\n\n    fetch(API_ENDPOINT, requestOptions)\n        .then(async response => {\n            const response_json = await response.json();\n            // Check if status in range 200-299\n            if (!response.ok) {\n                return Promise.reject(response_json);\n            }\n            let results = response_json['data']['result'];\n            let lengths = results.map(x => x.length);\n            let chipData = results.flat().map((x, i) => ({ key: i, label: x}));\n            setChipData(chipData);\n\n            let msg = \"Result: \" + lengths.map((n, i) => `[${n}] ${i+1}-grams`).join(', ');\n            setStatusText(msg);\n        })\n        .catch(errorJson => {\n            console.error(errorJson);\n            setStatusText(errorJson['error']['message']);\n        });\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}